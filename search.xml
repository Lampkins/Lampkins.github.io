<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java虚拟机 JVM笔记</title>
      <link href="2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/"/>
      <url>2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="JVM%E6%8E%A2%E7%A9%B6"><a class="header-anchor" href="#JVM%E6%8E%A2%E7%A9%B6">¶</a> JVM探究</h1><ul><li>请你谈谈你对JVM的理解？java8虚拟机和之前的变化更新”</li><li>什么是OOM？什么是栈溢出StackOverFlowError？怎么分析？</li><li>JVM的常用调优参数有哪些？</li><li>内存快照如何抓取？怎么分析Dump文件?知道吗？谈谈JVM中，类加载器你的认识？</li></ul><blockquote><p><a href="https://processon.com/view/5c749debe4b0f9fba6921d15"><strong>jvm java运行时数据分析，垃圾回收</strong></a></p><p><a href="https://processon.com/view/5ea7a1b9e401fd21c196eb17"><strong>JVM内存模型完整版</strong></a></p></blockquote><h2 id="1.%20JVM%E7%9A%84%E4%BD%8D%E7%BD%AE"><a class="header-anchor" href="#1.%20JVM%E7%9A%84%E4%BD%8D%E7%BD%AE">¶</a> 1. JVM的位置</h2><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201004185637450.png" alt="image-20201004185637450"></p><h2 id="2.%20JVM%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84"><a class="header-anchor" href="#2.%20JVM%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84">¶</a> 2. JVM的体系结构</h2><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201004214922822.png" alt="image-20201004214922822"></p><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201005183502733.png" alt="创建对象内存分析"></p><h2 id="3.%20%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8"><a class="header-anchor" href="#3.%20%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8">¶</a> 3. 类加载器</h2><p>作用：加载Class文件</p><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201004230714888.png" alt="image-20201004230714888"></p><p>虚拟机自带的加载器</p><ol><li><p><strong>启动类（根）加载器 Bootstrap ClassLoader</strong></p><p>加载<code>java</code>核心库 <code>java.*</code>，构造<code>ExtClassLoader</code>和<code>AppClassLoader</code></p></li><li><p><strong>扩展类加载器 Extension ClassLoader</strong></p><p>加载扩展库，如<code>classpath</code>中的<code>jre</code> ，<code>javax.*</code>或者<code>java.ext.dir</code> 指定位置中的类，开发者可以直接使用标准扩展类加载器。</p></li><li><p><strong>应用程序（系统类）加载器 AppClassLoader</strong></p><p>加载程序所在的目录，如<code>user.dir</code>所在的位置的<code>class</code></p></li><li><p><strong>用户自定义类加载器 CustomClassLoader</strong></p><p>用户自定义的类加载器,可加载指定路径的<code>class</code>文件</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(classLoader); <span class="comment">//AppClassLoader</span></span><br><span class="line">System.out.println(classLoader.getParent()); <span class="comment">//ExtClassLoader jre\lib\ext</span></span><br><span class="line">System.out.println(classLoader.getParent().getParent); <span class="comment">//null jre\lib\rt.jar</span></span><br></pre></td></tr></table></figure><h2 id="4.%20%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%9C%BA%E5%88%B6"><a class="header-anchor" href="#4.%20%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%9C%BA%E5%88%B6">¶</a> 4. 双亲委派机制</h2><p>APP – EXC – BOOT</p><p>向上委托，向下查找</p><p><strong>过程</strong></p><ol><li>类加载器收到类加载的请求!</li><li>将这个请求向上委托给父类加载器去完成，一直向上委托，直到启动类加载器 （loadClass(name, false), findBootstrapClassOrNull(name)）</li><li>启动类加载器检查是否能够加载当前这个类，能加载就结束，使用当前的加载器，否则， 抛出异常，通知子加载器进行加载 （fingClass(name)）</li><li>重复步骤3<br>Class Not Found ~</li></ol><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/7634245-7b7882e1f4ea5d7d.png" alt="7634245-7b7882e1f4ea5d7d.png"></p><p><strong>作用</strong></p><ul><li>防止加载同一个<code>.class</code>。通过委托向上一级询问，加载过了，就不用再加载一遍，保证数据安全</li><li>保证核心<code>.class</code>不能被篡改。通过委托方式，不会去篡改核心<code>.clas</code>，即使篡改也不会去加载，即使加载也不会是同一个<code>.class</code>对象了。不同的加载器加载同一个<code>.class</code>也不是同一个<code>Class</code>对象。这样保证了<code>Class</code>执行安全。</li></ul><h2 id="5.%20%E6%B2%99%E7%AE%B1%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6"><a class="header-anchor" href="#5.%20%E6%B2%99%E7%AE%B1%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6">¶</a> 5. 沙箱安全机制</h2><p>​沙箱是一个限制程序运行的环境。沙箱机制就是将 Java 代码限定在虚拟机(JVM)特定的运行范围中，并且严格限制代码对本地系统资源访问，通过这样的措施来保证对代码的有效隔离，防止对本地系统造成破坏。沙箱<strong>主要限制系统资源访问</strong>，那系统资源包括什么？——<code>CPU、内存、文件系统、网络</code>。不同级别的沙箱对这些资源访问的限制也可以不一样。</p><blockquote><p><a href="https://blog.csdn.net/qq_30336433/article/details/83268945">java中的安全模型(沙箱机制)</a></p></blockquote><h2 id="6.%20Native"><a class="header-anchor" href="#6.%20Native">¶</a> 6. Native</h2><p>native关键字：说明java的作用范围达不到了，进入本地方法栈，调用本地方法接口（JNI）去调用底层的库。</p><p><strong>JNI：Java Native Interface（Java本地方法接口）</strong><br>凡是带了native关键宇的方法就会进入本地方法栈，其他的就是Java栈</p><p><strong>Native Interface</strong>本地接口<br>本地接口的作用是融合不同的编程语言为Java所用，它的具体做法是在Native Method Stack中登记native方法，在(Execution Engine )执行引擎执行的时候加载Native Libraies.</p><p>​目前该方法使用的越来越少了，除非是与硬件有关的应用，比如通过Java程序驱动打印机或者Java系统管理生产设备，在企业级应用中已经比较少见。因为现在的异构领域间通信很发达，比如可以使用Socket通信，也可以使用Web Service等等，不多做介绍!</p><p><strong>Native Method Stack</strong></p><h2 id="7.%20PC%E5%AF%84%E5%AD%98%E5%99%A8"><a class="header-anchor" href="#7.%20PC%E5%AF%84%E5%AD%98%E5%99%A8">¶</a> 7. PC寄存器</h2><p>程序计数器: Program Counter Register<br>每个线程都有一个程序计数器，是线程私有的，就是一个指针， 指向方法区中的方法字节码(用来存储指向一条指令的地址，也即将要执行的指令代码)，在执行引擎读取下一-条指令,是一个非常小的内存空间，几乎可以忽略不计</p><h2 id="8.%20%E6%96%B9%E6%B3%95%E5%8C%BA%EF%BC%88%E9%9D%99%E6%80%81%E5%8C%BA%EF%BC%89"><a class="header-anchor" href="#8.%20%E6%96%B9%E6%B3%95%E5%8C%BA%EF%BC%88%E9%9D%99%E6%80%81%E5%8C%BA%EF%BC%89">¶</a> 8. 方法区（静态区）</h2><p>Method Area方法区<br>方法区是被所有线程共享,所有字段和方法字节码，以及-一些特殊方法，如构造函数,接口代码也在此定义，简单说，所有定义的方法的信息都保存在该区域，<strong>此区域属于共享区间</strong>；<br><mark>静态变量、常量、类信息(构造方法、接口定义)、串池、运行时的常量池存在方法区中，但是实例变量存在堆内存中，和方法区无关</mark></p><p>​static、final、Class、常量池（对象字面量：基本类型的包装类对象字面量[-128,127]，String对象字面量）</p><h2 id="9.%20%E6%A0%88%E5%86%85%E5%AD%98"><a class="header-anchor" href="#9.%20%E6%A0%88%E5%86%85%E5%AD%98">¶</a> 9. 栈内存</h2><p>栈（栈内存），主管线程的运行，生命周期和线程同步</p><p>线程结束栈内存就释放了，栈内存空了程序就结束了；不存在垃圾回收问题</p><p>栈内存常存放：局部变量 基本数据类型、对象引用、方法引用</p><p>栈内存运行原理：栈帧</p><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201005231633641.png" alt="栈内存及栈帧"></p><blockquote><p><a href="https://www.cnblogs.com/yanl55555/p/12616356.html">Java虚拟机栈–栈帧</a></p></blockquote><h2 id="10.%20%E4%B8%89%E7%A7%8DJVM"><a class="header-anchor" href="#10.%20%E4%B8%89%E7%A7%8DJVM">¶</a> 10. 三种JVM</h2><ul><li>Sun公司：<code>Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)</code></li><li>BEA公司：<code>Oracle JRockit （原来的 Bea JRockit）</code></li><li>IBM公司：J9VM</li></ul><h2 id="11.%20%E5%A0%86%E5%86%85%E5%AD%98"><a class="header-anchor" href="#11.%20%E5%A0%86%E5%86%85%E5%AD%98">¶</a> 11. 堆内存</h2><p>Heap，一个JVM只有一个堆内存，堆内存的大小是可以调节的。<br>类加载器读取了类文件后，一般会把什么东西放到堆中？<mark>类, 方法，常量，变量，保存引用类型的真实对象</mark></p><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201006182522720.png" alt="堆内存模型"></p><ul><li>新生区<ul><li>Eden区</li><li>Survivor from区</li><li>Survivor to区</li><li>8:1:1</li></ul></li><li>老年区</li><li>元空间  永久区</li></ul><p>轻GC在新生区，重GC(full GC)在老年区</p><p>假设内存满了，OOM，堆内存不够！ <code>java.lang.OutOfMemoryError: Java heap space</code></p><h2 id="12.%20%E6%96%B0%E7%94%9F%E5%8C%BA%20%E8%80%81%E5%B9%B4%E5%8C%BA"><a class="header-anchor" href="#12.%20%E6%96%B0%E7%94%9F%E5%8C%BA%20%E8%80%81%E5%B9%B4%E5%8C%BA">¶</a> 12. 新生区 老年区</h2><h2 id="13.%20%E6%B0%B8%E4%B9%85%E5%8C%BA"><a class="header-anchor" href="#13.%20%E6%B0%B8%E4%B9%85%E5%8C%BA">¶</a> 13. 永久区</h2><p>这个区域常驻内存的。用来存放JDK自身携带的lass对象。Interface元数据， 存储的是ava运行时的一些环境或类信息，不存在垃圾回收。关闭jvm虚拟机会释放这个区域的内存。</p><ul><li>jdk1.6之前：永久代，常量池是在方法区；</li><li>jdk1.7：永久代，但是慢慢的退化了，去永久代，常量池在堆中</li><li>jdk1.8之后：无永久代，被元空间所取代，最大区别：<mark>元空间并不在虚拟机中，而是使用本地内存。</mark></li></ul><h2 id="14.%20%E5%A0%86%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98"><a class="header-anchor" href="#14.%20%E5%A0%86%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98">¶</a> 14. 堆内存调优</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回jvm试图使用的最大内存</span></span><br><span class="line"><span class="keyword">long</span> max = Runtime.getRuntime().maxMemory();</span><br><span class="line"><span class="comment">// 返回jvm的初始化总内存，会随着时间发生变化</span></span><br><span class="line"><span class="keyword">long</span> total = Runtime.getRuntime().totalMemory();</span><br></pre></td></tr></table></figure><p>默认情况下，maxMemory是电脑内存的1/4，totalMemory是1/64</p><p><code>-Xms1024m -Xmx1024m -XX:+PrintGCDetails</code></p><blockquote><p>-Xms<size> 设置初始Java堆大小</size></p><p>Xmx<size> 设置最大Java堆大小</size></p></blockquote><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201006223130183.png" alt="image-20201006223130183"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// -Xms8m -Xmx8m -XX:+PrintGCDetails</span></span><br><span class="line">String str = <span class="string">&quot;str&quot;</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">    str = str +<span class="keyword">new</span> Random().nextInt(<span class="number">999999999</span>)+str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 先进行了5次轻GC，Eden区进入Survivor区导致，满了（或者年龄即轻GC次数到了），进入老年代，老年代满了，进行第一次重GC，清理年轻代，清理老年代(丢弃或进入元空间)...最后Java堆 老年代和元空间都满了 抛出OOM异常</span></span><br></pre></td></tr></table></figure><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201006234524118.png" alt="image-20201006234524118"></p><blockquote><p>GC表示的是进行一次Minor GC<br>Allocation Failure：表示分配担保失败。<br>PSYoungGen：新生代采用Parallel Scavenge收集器<br>1536K-&gt;504K(2048K)：GC前该区域已使用容量-&gt;GC后该区域已经使用的容量(该区域总容量)<br>1536K-&gt;817K(7680K)：方括号外的数字表示 GC前Java堆已用容量-&gt;GC后Java堆容量(Java堆总容量)<br>0.0013784 secs：该内存区域GC所用的时间<br>Times: user=0.00 sys=0.00, real=0.00 secs：用户态消耗的CPU时间，内核态消耗的CPU时间，操作从开始到结束所经历的墙钟时间(Wall Clock Time)</p><p>Full GC完全的垃圾回收<br>Ergonomics工程<br>ParOldGen老年代采用Parallel Old收集器<br>Metaspace元数据空间垃圾回收</p></blockquote><h3 id="Java%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7"><a class="header-anchor" href="#Java%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7">¶</a> Java内存分析工具</h3><p>OOM，排错：</p><ol><li><p>尝试扩大堆内存看结果</p><ol start="2"><li>分析内存，看一下那里出现问题（工具分析）<ul><li>Debug，一行行分析代码</li><li>内存快照分析工具，MAT，JProfiler</li></ul></li></ol></li></ol><p><strong>MAT、Jprofiler作用：</strong></p><ul><li>分析Dump内存文件，快速定位内存泄露</li><li>获取堆中的数据</li><li>获得大的对象</li><li>…</li></ul><p>当抛出OOM时进行HeapDump：<code>-Xms1m -Xmx8m -XX:+HeapDumpOnOutOfMemoryError</code></p><blockquote><p><a href="https://blog.csdn.net/vicky_pyh/article/details/88797514">Jprofiler的安装和使用</a></p></blockquote><h2 id="15.%20GC"><a class="header-anchor" href="#15.%20GC">¶</a> 15. GC</h2><p>**目的：**回收堆内存中不再使用的对象，释放资源<br>**回收时间：**当对象永久地失去引用后，系统会在合适的时候回收它所占用的内存。</p><p><code>System.gc(); / Runtime.getRuntime().gc();</code></p><h3 id="15.1%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E4%B8%8E%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95"><a class="header-anchor" href="#15.1%20%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E4%B8%8E%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95">¶</a> 15.1 垃圾回收与常用算法</h3><h4 id="%E5%A6%82%E4%BD%95%E7%A1%AE%E5%AE%9A%E5%9E%83%E5%9C%BE%EF%BC%9F"><a class="header-anchor" href="#%E5%A6%82%E4%BD%95%E7%A1%AE%E5%AE%9A%E5%9E%83%E5%9C%BE%EF%BC%9F">¶</a> 如何确定垃圾？</h4><ul><li><p><strong>引用计数法</strong></p><p>​一个对象如果没有任何与之关联的引用，即他的引用计数都为0，则说明对象不太可能再被用到，那么这个对象就是可回收对象。会出现<strong>循环引用问题</strong></p></li></ul><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201007225319656.png" alt="image-20201007225319656"></p><ul><li><p><strong>可达性分析</strong></p><p>​当一个对象到任意一个GC Roots对象没有任何引用链相连时，则称该对象是不可达的。 要注意的是，不可达对象不等价于可回收对象，不可达对象变为可回收对象至少要经过两次标记 过程。两次标记后仍然是可回收对象，则将面临回收。</p></li></ul><h4 id="%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E5%9E%83%E5%9C%BE%EF%BC%9F"><a class="header-anchor" href="#%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E5%9E%83%E5%9C%BE%EF%BC%9F">¶</a> 如何清除垃圾？</h4><ul><li><p><strong>复制算法</strong></p><p>将内存按内存容量划分为等大小的两块，当这块内存需要垃圾回收时,将此区域还存活的对象复制到另一块中，然后把这块内存清理掉。</p><p>每次对整个半区进行操作，解决了内存碎片化的问题，但会多使用一定的内存空间，且存活对象较多时，效率会大大降低。</p><p>**最佳应用场景：**对象存活度较低的时候，新生代</p><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201011155401200.png" alt="image-20201011155401200"></p></li><li><p><strong>标记清除法</strong></p><p>最基础的垃圾回收算法，分为两个阶段，<mark>标记和清除</mark>。标记阶段标记出所有需要回收的对象，清除阶段回收所有被标记的对象。</p><p>内存碎片化严重，可能发生大对象找不到可利用空间的问题。</p><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201011155131800.png" alt="image-20201011155131800"></p></li><li><p><strong>标记整理法</strong></p><p>标记后将存活对象移向内存的一端，然后清除端边界外的对象。</p><p>防止了内存碎片的产生，整理需耗用一定时间</p><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201011155936528.png" alt="image-20201011155936528"></p></li><li><p><strong>标记清除整理</strong>：先标记清除，内存碎片较多时再使用标记整理</p></li><li><p><strong>分代收集法 GC</strong></p><p>根据对象存活的不同生命周期将内存划分为不同的域，一般情况下将 GC 堆划分为<mark>新生代(Young Generation)<mark>和</mark>老生代(Tenured/Old Generation)</mark>。</p><p><strong>新生代</strong>的特点是对象生存时间比较短，存活率低，每次可回收的垃圾对象较多，采用复制算法。</p><p>​<strong>HotSpot实现的复制算法流程：</strong></p><ol><li>当Eden区满的时候会触发第一次Minor gc，把还存活的对象拷贝到Survivor From区中。</li><li>当Eden区再一次触发Minor gc时，会对Eden区和Survivor From区进行垃圾回收,把还存活的对象复制到To区域,并将Eden和From区清空，此时Form和To名称交换。</li><li>有些对象会在From区和To区来回复制，如此交换15次(默认为15次,<code>-XX:MaxTenuringThreshold=15</code>)，最终如果还是存活，就存入老年代。</li></ol><p><strong>老生代</strong>的特点是空间比较大，存活率高，每次可回收的垃圾对象较少，采用标记清除(内存碎片较少)和标记整理算法。</p></li><li><p><strong>总结</strong></p><p>内存效率：复制算法 &gt; 标记清除算法 &gt; 标记整理算法(时间复杂度)<br>内存整齐度：复制算法 = 标记整理算法 &gt; 标记清除算法<br>内存利用率：标记整理算法 = 标记清除算法 &gt; 复制算法</p></li></ul><h2 id="16.%20JMM(Java%20Memory%20Model)"><a class="header-anchor" href="#16.%20JMM(Java%20Memory%20Model)">¶</a> 16. JMM(Java Memory Model)</h2><p>​JMM决定一个线程对共享变量的写入何时对另一个线程可见。从抽象的角度来看，JMM定义了线程和主内存之间的抽象关系：<mark>线程之间的共享变量存储在主内存（main memory）中，每个线程都有一个私有的本地内存（local memory），本地内存中存储了该线程以读/写共享变量的副本。</mark></p><p>​本地内存是JMM的一个抽象概念，并不真实存在。它涵盖了缓存，写缓冲区，寄存器以及其他的硬件和编译器优化。其关系模型图如下图所示：JMM对这八种指令的使用，制定了如下规则：</p><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201012155842619.png" alt="image-20201012155842619"></p><ul><li>不允许read和load, store和write操作之- -单独出现。 即使用了read必须load,使用了store必须<br>write</li><li>不允许线程丢弃他最近的assign操作，即工作变量的数据改变了之后，必须告知主存</li><li>不允许一个线程将没有assign的数据从工作内存同步回主内存</li><li>一个新的变量必须在主内存中诞生，不允许工作内存直接使用一一个未被初始化的变量.就是怼变量实<br>施use、store操作之前， 必须经过assign和load操作</li><li>一个变量同一时间只有一一个线程能对其进行lock.多次lock后,必须执行相同次数的unlock才能解锁</li><li>如果对一个变量进行lock操作， 会清空所有工作内存中此变量的值，在执行引擎使用这个变量前，必须重新load或assign操作初始化变量的值</li><li>如果一个变量没有被lock,就不能对其进行unlock操作。也不能unlock- 个被其他线程锁住的变量</li><li>对一个变量进行unlock操作之前，必须把此变量同步回主内存</li></ul><p>JMM对这八种操作规则和对yolatile的一些特殊规则就能确定哪里操作是线程安全，哪些操作是线程不安全的了。但是这些规则实在复杂，很难在实践中直接分析。所以- -般我们也不会通过上述规则进行分析.更多的时候，使用java的happen-before规则来进行分析。</p><p><img src="/2020/10/12/Java%E8%99%9A%E6%8B%9F%E6%9C%BAJVM%E7%AC%94%E8%AE%B0/image-20201011180843607.png" alt="image-20201011180843607"></p><h2 id="17.%20%E6%80%BB%E7%BB%93"><a class="header-anchor" href="#17.%20%E6%80%BB%E7%BB%93">¶</a> 17. 总结</h2><blockquote><p><a href="https://blog.csdn.net/TJtulong/article/details/89598598">深入理解java虚拟机（全章节完整）</a></p></blockquote><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown Demo 测试</title>
      <link href="2020/10/12/Markdown-Demo-%E6%B5%8B%E8%AF%95/"/>
      <url>2020/10/12/Markdown-Demo-%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>这是一个段落。<br>这是一个段落。</p><a id="more"></a><h1 id="%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98"><a class="header-anchor" href="#%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98">¶</a> 一级标题</h1><h2 id="%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98"><a class="header-anchor" href="#%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98">¶</a> 二级标题</h2><h1 id="%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98-2"><a class="header-anchor" href="#%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98-2">¶</a> 一级标题</h1><h2 id="%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98-2"><a class="header-anchor" href="#%E4%BA%8C%E7%BA%A7%E6%A0%87%E9%A2%98-2">¶</a> 二级标题</h2><h3 id="%E4%B8%89%E7%BA%A7%E6%A0%87%E9%A2%98"><a class="header-anchor" href="#%E4%B8%89%E7%BA%A7%E6%A0%87%E9%A2%98">¶</a> 三级标题</h3><h4 id="%E5%9B%9B%E7%BA%A7%E6%A0%87%E9%A2%98"><a class="header-anchor" href="#%E5%9B%9B%E7%BA%A7%E6%A0%87%E9%A2%98">¶</a> 四级标题</h4><h5 id="%E4%BA%94%E7%BA%A7%E6%A0%87%E9%A2%98"><a class="header-anchor" href="#%E4%BA%94%E7%BA%A7%E6%A0%87%E9%A2%98">¶</a> 五级标题</h5><h6 id="%E5%85%AD%E7%BA%A7%E6%A0%87%E9%A2%98"><a class="header-anchor" href="#%E5%85%AD%E7%BA%A7%E6%A0%87%E9%A2%98">¶</a> 六级标题</h6><blockquote><p>区块引用</p><blockquote><p>嵌套引用</p></blockquote></blockquote><ul><li>第一项<ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></li><li>第二项<ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></li><li>第三项<ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></li></ul><hr><hr><hr><pre><code>void main()&#123;    printf(&quot;Hello, Markdown.&quot;);&#125;</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello, Markdown.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">1</th><th style="text-align:center">2</th><th style="text-align:right">3</th></tr></thead><tbody><tr><td style="text-align:left">aaaaa</td><td style="text-align:center">bbbbb</td><td style="text-align:right">ccccc</td></tr><tr><td style="text-align:left"><em>ABC</em></td><td style="text-align:center"><em>123</em></td><td style="text-align:right"><em>abc</em></td></tr></tbody></table><ul><li><input type="checkbox" id="checkbox0"><label for="checkbox0">任务A</label></li><li><input type="checkbox" id="checkbox1" checked="true"><label for="checkbox1">任务B</label><ul><li><input type="checkbox" id="checkbox2" checked="true"><label for="checkbox2">任务1</label></li><li><input type="checkbox" id="checkbox3" checked="true"><label for="checkbox3">任务2</label></li><li><input type="checkbox" id="checkbox4" checked="true"><label for="checkbox4">任务3</label></li></ul></li><li><input type="checkbox" id="checkbox5"><label for="checkbox5">任务C</label></li></ul><dl><dt>Definition</dt><dd>这是一个定义。</dd></dl><p><a href="https://www.baidu.com/">https://www.baidu.com/</a><br><a href="https://www.baidu.com/" title="Baidu">链接</a><br><a href="https://www.baidu.com/" title="Baidu">链接</a><br><img src="https://www.baidu.com/img/bd_logo1.png" alt="图片" title="Baidu"><br><img src="https://www.baidu.com/img/bd_logo1.png" alt="图片" title="Baidu" class="fancybox center-block"></p><p><img src="https://www.baidu.com/img/bd_logo1.png" class="fancybox center-block"></p><p><a href="#anchor" title="Anchor">锚点</a><br><a href="#anchor" title="Anchor">锚点</a></p><p id="anchor" name="anchor">锚点</p><p>这是一个脚注<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。</p><p>这是一个缩写（<abbr title="Hyper Text Markup Language">HTML</abbr>）。</p><p>H<sup>2</sup>，H<sub>2</sub><br><em>斜体</em>，<em>斜体</em><br><strong>粗体</strong>，<strong>粗体</strong><br><em><strong>粗斜体</strong></em>，<em><strong>粗斜体</strong></em><br><s>删除</s>，<ins>插入</ins>，<mark>标记</mark><br><code>printf(&quot;Hello, Markdown.&quot;);</code></p><p>\，`，*，_，{}，[]，()，#，+，-，.，!</p><p>&amp;，&lt;，©，😄，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E=mc^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05764em;">E</span><span class="mrel">=</span><span class="mord mathit">m</span><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mrow><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mi>y</mi><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub><mi>z</mi><mo>=</mo><msub><mi>d</mi><mn>1</mn></msub></mrow></mtd></mtr><mtr><mtd><mrow><msub><mi>a</mi><mn>2</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mi>y</mi><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><mi>z</mi><mo>=</mo><msub><mi>d</mi><mn>2</mn></msub></mrow></mtd></mtr><mtr><mtd><mrow><msub><mi>a</mi><mn>3</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>3</mn></msub><mi>y</mi><mo>+</mo><msub><mi>c</mi><mn>3</mn></msub><mi>z</mi><mo>=</mo><msub><mi>d</mi><mn>3</mn></msub></mrow></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\begin{cases}a_1x+b_1y+c_1z=d_1\\a_2x+b_2y+c_2z=d_2\\a_3x+b_3y+c_3z=d_3\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:2.41em;"></span><span class="strut bottom" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="base displaystyle textstyle uncramped"><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing mult"><span class="vlist"><span style="top:0.9500099999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:0.9500099999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.000010000000000287557em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-1.1500100000000002em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.4500200000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist"><span style="top:-1.4020000000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord"><span class="mord mathit">b</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mrel">=</span><span class="mord"><span class="mord mathit">d</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span style="top:0.0379999999999997em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord"><span class="mord mathit">b</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mrel">=</span><span class="mord"><span class="mord mathit">d</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span style="top:1.4779999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord"><span class="mord mathit">b</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord"><span class="mord mathit">c</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mrel">=</span><span class="mord"><span class="mord mathit">d</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@startuml</span><br><span class="line">A -&gt; B: Hello</span><br><span class="line">@enduml</span><br></pre></td></tr></table></figure><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></cite></footer></blockquote><figure class="highlight javascript"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="literal">false</span>, <span class="number">2</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">3</span>]);</span><br><span class="line">=&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><iframe src="https://www.baidu.com/" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe><img src="https://www.baidu.com/img/bd_logo1.png" class="image" width="300" height="150" title="Baidu"><a href="https://www.baidu.com/" title="Baidu" target>Baidu</a><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css"><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><a href="https://www.baidu.com/">https://www.baidu.com/</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/12/hello-world/"/>
      <url>2020/10/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick%20Start"><a class="header-anchor" href="#Quick%20Start">¶</a> Quick Start</h2><h3 id="Create%20a%20new%20post"><a class="header-anchor" href="#Create%20a%20new%20post">¶</a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run%20server"><a class="header-anchor" href="#Run%20server">¶</a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate%20static%20files"><a class="header-anchor" href="#Generate%20static%20files">¶</a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy%20to%20remote%20sites"><a class="header-anchor" href="#Deploy%20to%20remote%20sites">¶</a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
